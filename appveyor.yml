-
  #branches:
    #only:
    #  - * 
    #  - develop
    #  - release

  environment:
    NUGET_API_KEY:
      secure: RecutddoR0t/Ux0kW2FMkNmucowRhtk6W5vWfwAjnodkpf6zLZwr0stBeYiPfBsk
      
  os: Visual Studio 2017
  assembly_info:
    patch: true
    file: '**\AssemblyInfo.*'
    assembly_version: '$(GitVersion_AssemblySemVer)'
    assembly_file_version: '$(GitVersion_AssemblySemVer)'
    assembly_informational_version: '$(GitVersion_NuGetVersion)'
    
  install:
    # GitVersion doesn't support SSH, so change the origin remote to an HTTPS URL (if using a private server: 
    # http://help.appveyor.com/discussions/kb/17-getting-gitversion-to-work-with-private-bitbucketgithub-repositories
    # Ensure the GITVERSION_REMOTE_USERNAME and GITVERSION_REMOTE_PASSWORD env variables are set in either this file or the project configuration.  
    - git remote set-url origin https://github.com/daleholborow/iayos.extensions.git
    - GitVersion -output buildserver    
    
  before_build:
   - nuget restore src\iayos.extensions.sln
   - echo %GitVersion_NuGetVersion%
     
  build:
    publish_nuget: true  
    verbosity: minimal  
    
  test: off

  configuration:
   - Debug
   
  cache:
   - packages
   
-
  branches:
    only:
      - master
      - /hotfix.*/  # also deploy any hotfixes

  os: Visual Studio 2017
  assembly_info:
    patch: true
    file: '**\AssemblyInfo.*'
    assembly_version: '$(GitVersion_AssemblySemVer)'
    assembly_file_version: '$(GitVersion_AssemblySemVer)'
    assembly_informational_version: '$(GitVersion_NuGetVersion)'
    
  install:
    # GitVersion doesn't support SSH, so change the origin remote to an HTTPS URL (if using a private server: 
    # http://help.appveyor.com/discussions/kb/17-getting-gitversion-to-work-with-private-bitbucketgithub-repositories
    # Ensure the GITVERSION_REMOTE_USERNAME and GITVERSION_REMOTE_PASSWORD env variables are set in either this file or the project configuration.  
    - git remote set-url origin https://github.com/daleholborow/iayos.extensions.git
    - GitVersion -output buildserver    
    
  before_build:
   - nuget restore src\iayos.extensions.sln
   - echo %GitVersion_NuGetVersion%

  build:
    publish_nuget: true  
    verbosity: minimal  
    
  test: off

  configuration:
   - Release
   
  cache:
   - packages
   
#  deploy:
#    provider: NuGet  
#    api_key:
#      secure: RecutddoR0t/Ux0kW2FMkNmucowRhtk6W5vWfwAjnodkpf6zLZwr0stBeYiPfBsk
#    skip_symbols: true
#    artifact: /.*\.nupkg/ 

  deploy_script:
   - appveyor DownloadFile https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
   - ps: .\nuget.exe setApiKey $env:NUGET_API_KEY -source https://www.nuget.org | out-null
   - ps: ($artifacts.values | Where-Object { $_.path -like '*.nupkg' }) | foreach-object {nuget.exe push $_.path -Source https://www.nuget.org/api/v2/package}  